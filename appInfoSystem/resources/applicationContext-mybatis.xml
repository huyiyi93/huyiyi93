<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-3.2.xsd
            http://www.springframework.org/schema/aop 
            http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
            http://www.springframework.org/schema/mvc 
            http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
    <!-- 加载jdbc.properties文件中的内容 中的key要有一定的规则 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!-- JNDI配置数据源 (dbcp连接池)-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" scope="singleton">
        <property name="driverClassName" value="${driverClassName}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${uname}"/>
        <property name="password" value="${password}"/>
        <property name="initialSize" value="${initialSize"/>
        <property name="maxActive" value="${maxActive}"/>
        <property name="maxIdle" value="${maxIdle}"/>
        <property name="minIdle" value="${minIdle}"/>
        <property name="maxWait" value="${maxWait}"/>
        <property name="removeAbandoned" value="${removeAbandoned}"/>
        <property name="removeAbandonedTimeOut" value="${removeAbandonedTimeOut}"/>
        <property name="maxIdle" value="${maxIdle}"/>
    
    <!-- sql心跳:保证连接池中连接是真实有效的连接 -->
    <!-- testWhileIdle testOnborrow testOnReturn
    validationQuery-select 1
     -->
    <!-- 开启Evict(依法回收)的定时校验，循环校验 -->
    <property name="testWhileIdel" value="true"/>
    <!-- 定义Evict的时间间隔，单位：毫秒，大于零的时候才开启Evict -->
    <property name="timeBetweenEvictionRunsMillis" value="60000"/>
    <!-- 在进行borrowObject,returnObject处理时，会对拿到的连接进行校验-false -->
    <property name="testOnBorrow" value="false"/>
    <property name="testOnReturn" value="false"/>
    <!-- 校验使用的sql语句，validationQuery,不要太复杂，会印象性能 -->
    <property name="validationQuery" value="select 1"/>
    <!-- 配置每次校验连接的数量，一般等于maxActive -->
    <property name="numTestsPerEvictionRun" value="${maxActive}"/>
    </bean>
    <!-- 事务管理 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DateSourceTransactionManager">
    <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <!-- 配置SqlSessionFactoryBean -->    
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 加载数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 加载mybatis全局配置文件 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>
    
    <!-- aop事务处理 -->
    <aop:scoped-proxy/>
    <aop:config proxy-target-class="true">
    	<aop:pointcut expression="execution(**cn.appsys.service..*(..))" id="transService"/>
    	<aop:advisor advice-ref="txAdvice" pointcut-ref="transService"/>
    </aop:config>
    <!-- txAdvice:需要定义事务管理器，进行事务处理-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
    	<tx:attributes>
    		<tx:method name="hl*" propagation="REQUIRED" rollback-for="Exception"/>
    	</tx:attributes>
    </tx:advice>
    
    
    <!-- 配置mapper扫描器 ,mapper接口所在的包名，spring会自动查找其下的mapper-->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描包路径，如果需要扫描多个，中间使用半角的逗号隔开 -->
        <property name="basePackage" value="cn.appsys.dao"/>
        <property name="SqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>   
    <!-- redius配置 -->
 </beans>